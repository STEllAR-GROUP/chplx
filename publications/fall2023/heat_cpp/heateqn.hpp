// This program file was generated by the chplx compiler.
// The original Chapel program file can be found here: heateqn.chpl
//
#pragma once

#ifndef __HEATEQN_HPP__
#define __HEATEQN_HPP__

#include <chplx.hpp>

#include <hpx/execution.hpp>

#include <functional>
#include <iostream>

namespace heateqn {
    extern struct __thisModule* __this;

    extern std::int64_t ghosts;
    extern double k;
    extern double dt;
    extern double dx;
    extern std::int64_t nx;
    extern std::int64_t nt;
    extern int fork_join;

    struct __thisModule
    {
        void update(chplx::Array<double, chplx::Domain<1>>& d,
            chplx::Array<double, chplx::Domain<1>>& d2);

        static void __construct()
        {
            heateqn::__this = new __thisModule();
        }

        static void __destruct() noexcept
        {
            auto* m = heateqn::__this;
            heateqn::__this = nullptr;
            delete m;
        }

        void __main();

        hpx::execution::experimental::fork_join_executor* exec = nullptr;
    };    // end struct __thisModule

}    // namespace heateqn

#endif
